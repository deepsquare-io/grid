// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.23.3
// source: metrics/v1/metrics.proto

package metricsv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version string   `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	Metrics *Metrics `protobuf:"bytes,2,opt,name=metrics,proto3" json:"metrics,omitempty"`
	OldJobs []*Job   `protobuf:"bytes,3,rep,name=old_jobs,json=oldJobs,proto3" json:"old_jobs,omitempty"`
}

func (x *DB) Reset() {
	*x = DB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metrics_v1_metrics_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DB) ProtoMessage() {}

func (x *DB) ProtoReflect() protoreflect.Message {
	mi := &file_metrics_v1_metrics_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DB.ProtoReflect.Descriptor instead.
func (*DB) Descriptor() ([]byte, []int) {
	return file_metrics_v1_metrics_proto_rawDescGZIP(), []int{0}
}

func (x *DB) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *DB) GetMetrics() *Metrics {
	if x != nil {
		return x.Metrics
	}
	return nil
}

func (x *DB) GetOldJobs() []*Job {
	if x != nil {
		return x.OldJobs
	}
	return nil
}

type LabeledMetric struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string  `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value float64 `protobuf:"fixed64,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *LabeledMetric) Reset() {
	*x = LabeledMetric{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metrics_v1_metrics_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LabeledMetric) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LabeledMetric) ProtoMessage() {}

func (x *LabeledMetric) ProtoReflect() protoreflect.Message {
	mi := &file_metrics_v1_metrics_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LabeledMetric.ProtoReflect.Descriptor instead.
func (*LabeledMetric) Descriptor() ([]byte, []int) {
	return file_metrics_v1_metrics_proto_rawDescGZIP(), []int{1}
}

func (x *LabeledMetric) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *LabeledMetric) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type Metrics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MetaschedulerAddress   string           `protobuf:"bytes,1,opt,name=metascheduler_address,json=metaschedulerAddress,proto3" json:"metascheduler_address,omitempty"`
	TotalNumberOfJobs      []*LabeledMetric `protobuf:"bytes,2,rep,name=total_number_of_jobs,json=totalNumberOfJobs,proto3" json:"total_number_of_jobs,omitempty"`
	TotalJobsPending       []*LabeledMetric `protobuf:"bytes,3,rep,name=total_jobs_pending,json=totalJobsPending,proto3" json:"total_jobs_pending,omitempty"`
	TotalJobsMetaScheduled []*LabeledMetric `protobuf:"bytes,4,rep,name=total_jobs_meta_scheduled,json=totalJobsMetaScheduled,proto3" json:"total_jobs_meta_scheduled,omitempty"`
	TotalJobsScheduled     []*LabeledMetric `protobuf:"bytes,5,rep,name=total_jobs_scheduled,json=totalJobsScheduled,proto3" json:"total_jobs_scheduled,omitempty"`
	TotalJobsRunning       []*LabeledMetric `protobuf:"bytes,6,rep,name=total_jobs_running,json=totalJobsRunning,proto3" json:"total_jobs_running,omitempty"`
	TotalJobsCancelled     []*LabeledMetric `protobuf:"bytes,7,rep,name=total_jobs_cancelled,json=totalJobsCancelled,proto3" json:"total_jobs_cancelled,omitempty"`
	TotalJobsFinished      []*LabeledMetric `protobuf:"bytes,8,rep,name=total_jobs_finished,json=totalJobsFinished,proto3" json:"total_jobs_finished,omitempty"`
	TotalJobsFailed        []*LabeledMetric `protobuf:"bytes,9,rep,name=total_jobs_failed,json=totalJobsFailed,proto3" json:"total_jobs_failed,omitempty"`
	TotalJobsOutOfCredits  []*LabeledMetric `protobuf:"bytes,10,rep,name=total_jobs_out_of_credits,json=totalJobsOutOfCredits,proto3" json:"total_jobs_out_of_credits,omitempty"`
	TotalCreditSpent       []*LabeledMetric `protobuf:"bytes,11,rep,name=total_credit_spent,json=totalCreditSpent,proto3" json:"total_credit_spent,omitempty"`
	TotalGpuTime           []*LabeledMetric `protobuf:"bytes,12,rep,name=total_gpu_time,json=totalGpuTime,proto3" json:"total_gpu_time,omitempty"`
	TotalCpuTime           []*LabeledMetric `protobuf:"bytes,13,rep,name=total_cpu_time,json=totalCpuTime,proto3" json:"total_cpu_time,omitempty"`
	TotalJobDuration       []*LabeledMetric `protobuf:"bytes,14,rep,name=total_job_duration,json=totalJobDuration,proto3" json:"total_job_duration,omitempty"`
	LastBlockWatched       float64          `protobuf:"fixed64,15,opt,name=last_block_watched,json=lastBlockWatched,proto3" json:"last_block_watched,omitempty"`
	TotalJobRefused        []*LabeledMetric `protobuf:"bytes,16,rep,name=total_job_refused,json=totalJobRefused,proto3" json:"total_job_refused,omitempty"`
	TotalBilledTooMuch     []*LabeledMetric `protobuf:"bytes,17,rep,name=total_billed_too_much,json=totalBilledTooMuch,proto3" json:"total_billed_too_much,omitempty"`
}

func (x *Metrics) Reset() {
	*x = Metrics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metrics_v1_metrics_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Metrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metrics) ProtoMessage() {}

func (x *Metrics) ProtoReflect() protoreflect.Message {
	mi := &file_metrics_v1_metrics_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metrics.ProtoReflect.Descriptor instead.
func (*Metrics) Descriptor() ([]byte, []int) {
	return file_metrics_v1_metrics_proto_rawDescGZIP(), []int{2}
}

func (x *Metrics) GetMetaschedulerAddress() string {
	if x != nil {
		return x.MetaschedulerAddress
	}
	return ""
}

func (x *Metrics) GetTotalNumberOfJobs() []*LabeledMetric {
	if x != nil {
		return x.TotalNumberOfJobs
	}
	return nil
}

func (x *Metrics) GetTotalJobsPending() []*LabeledMetric {
	if x != nil {
		return x.TotalJobsPending
	}
	return nil
}

func (x *Metrics) GetTotalJobsMetaScheduled() []*LabeledMetric {
	if x != nil {
		return x.TotalJobsMetaScheduled
	}
	return nil
}

func (x *Metrics) GetTotalJobsScheduled() []*LabeledMetric {
	if x != nil {
		return x.TotalJobsScheduled
	}
	return nil
}

func (x *Metrics) GetTotalJobsRunning() []*LabeledMetric {
	if x != nil {
		return x.TotalJobsRunning
	}
	return nil
}

func (x *Metrics) GetTotalJobsCancelled() []*LabeledMetric {
	if x != nil {
		return x.TotalJobsCancelled
	}
	return nil
}

func (x *Metrics) GetTotalJobsFinished() []*LabeledMetric {
	if x != nil {
		return x.TotalJobsFinished
	}
	return nil
}

func (x *Metrics) GetTotalJobsFailed() []*LabeledMetric {
	if x != nil {
		return x.TotalJobsFailed
	}
	return nil
}

func (x *Metrics) GetTotalJobsOutOfCredits() []*LabeledMetric {
	if x != nil {
		return x.TotalJobsOutOfCredits
	}
	return nil
}

func (x *Metrics) GetTotalCreditSpent() []*LabeledMetric {
	if x != nil {
		return x.TotalCreditSpent
	}
	return nil
}

func (x *Metrics) GetTotalGpuTime() []*LabeledMetric {
	if x != nil {
		return x.TotalGpuTime
	}
	return nil
}

func (x *Metrics) GetTotalCpuTime() []*LabeledMetric {
	if x != nil {
		return x.TotalCpuTime
	}
	return nil
}

func (x *Metrics) GetTotalJobDuration() []*LabeledMetric {
	if x != nil {
		return x.TotalJobDuration
	}
	return nil
}

func (x *Metrics) GetLastBlockWatched() float64 {
	if x != nil {
		return x.LastBlockWatched
	}
	return 0
}

func (x *Metrics) GetTotalJobRefused() []*LabeledMetric {
	if x != nil {
		return x.TotalJobRefused
	}
	return nil
}

func (x *Metrics) GetTotalBilledTooMuch() []*LabeledMetric {
	if x != nil {
		return x.TotalBilledTooMuch
	}
	return nil
}

type Job struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobId        []byte         `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	Status       uint32         `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	CustomerAddr string         `protobuf:"bytes,3,opt,name=customer_addr,json=customerAddr,proto3" json:"customer_addr,omitempty"`
	ProviderAddr string         `protobuf:"bytes,4,opt,name=provider_addr,json=providerAddr,proto3" json:"provider_addr,omitempty"`
	Definition   *JobDefinition `protobuf:"bytes,5,opt,name=definition,proto3" json:"definition,omitempty"`
	Cost         *JobCost       `protobuf:"bytes,6,opt,name=cost,proto3" json:"cost,omitempty"`
	Time         *JobTime       `protobuf:"bytes,7,opt,name=time,proto3" json:"time,omitempty"`
	JobName      []byte         `protobuf:"bytes,8,opt,name=job_name,json=jobName,proto3" json:"job_name,omitempty"`
}

func (x *Job) Reset() {
	*x = Job{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metrics_v1_metrics_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Job) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Job) ProtoMessage() {}

func (x *Job) ProtoReflect() protoreflect.Message {
	mi := &file_metrics_v1_metrics_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Job.ProtoReflect.Descriptor instead.
func (*Job) Descriptor() ([]byte, []int) {
	return file_metrics_v1_metrics_proto_rawDescGZIP(), []int{3}
}

func (x *Job) GetJobId() []byte {
	if x != nil {
		return x.JobId
	}
	return nil
}

func (x *Job) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *Job) GetCustomerAddr() string {
	if x != nil {
		return x.CustomerAddr
	}
	return ""
}

func (x *Job) GetProviderAddr() string {
	if x != nil {
		return x.ProviderAddr
	}
	return ""
}

func (x *Job) GetDefinition() *JobDefinition {
	if x != nil {
		return x.Definition
	}
	return nil
}

func (x *Job) GetCost() *JobCost {
	if x != nil {
		return x.Cost
	}
	return nil
}

func (x *Job) GetTime() *JobTime {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *Job) GetJobName() []byte {
	if x != nil {
		return x.JobName
	}
	return nil
}

type BigInt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bytes []byte `protobuf:"bytes,1,opt,name=bytes,proto3" json:"bytes,omitempty"`
}

func (x *BigInt) Reset() {
	*x = BigInt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metrics_v1_metrics_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BigInt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BigInt) ProtoMessage() {}

func (x *BigInt) ProtoReflect() protoreflect.Message {
	mi := &file_metrics_v1_metrics_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BigInt.ProtoReflect.Descriptor instead.
func (*BigInt) Descriptor() ([]byte, []int) {
	return file_metrics_v1_metrics_proto_rawDescGZIP(), []int{4}
}

func (x *BigInt) GetBytes() []byte {
	if x != nil {
		return x.Bytes
	}
	return nil
}

type JobCost struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaxCost   *BigInt `protobuf:"bytes,1,opt,name=max_cost,json=maxCost,proto3" json:"max_cost,omitempty"`
	FinalCost *BigInt `protobuf:"bytes,2,opt,name=final_cost,json=finalCost,proto3" json:"final_cost,omitempty"`
}

func (x *JobCost) Reset() {
	*x = JobCost{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metrics_v1_metrics_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobCost) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobCost) ProtoMessage() {}

func (x *JobCost) ProtoReflect() protoreflect.Message {
	mi := &file_metrics_v1_metrics_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobCost.ProtoReflect.Descriptor instead.
func (*JobCost) Descriptor() ([]byte, []int) {
	return file_metrics_v1_metrics_proto_rawDescGZIP(), []int{5}
}

func (x *JobCost) GetMaxCost() *BigInt {
	if x != nil {
		return x.MaxCost
	}
	return nil
}

func (x *JobCost) GetFinalCost() *BigInt {
	if x != nil {
		return x.FinalCost
	}
	return nil
}

type JobDefinition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GpusPerTask uint64 `protobuf:"varint,1,opt,name=gpus_per_task,json=gpusPerTask,proto3" json:"gpus_per_task,omitempty"`
	MemPerCpu   uint64 `protobuf:"varint,2,opt,name=mem_per_cpu,json=memPerCpu,proto3" json:"mem_per_cpu,omitempty"`
	CpusPerTask uint64 `protobuf:"varint,3,opt,name=cpus_per_task,json=cpusPerTask,proto3" json:"cpus_per_task,omitempty"`
	Ntasks      uint64 `protobuf:"varint,4,opt,name=ntasks,proto3" json:"ntasks,omitempty"`
}

func (x *JobDefinition) Reset() {
	*x = JobDefinition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metrics_v1_metrics_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobDefinition) ProtoMessage() {}

func (x *JobDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_metrics_v1_metrics_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobDefinition.ProtoReflect.Descriptor instead.
func (*JobDefinition) Descriptor() ([]byte, []int) {
	return file_metrics_v1_metrics_proto_rawDescGZIP(), []int{6}
}

func (x *JobDefinition) GetGpusPerTask() uint64 {
	if x != nil {
		return x.GpusPerTask
	}
	return 0
}

func (x *JobDefinition) GetMemPerCpu() uint64 {
	if x != nil {
		return x.MemPerCpu
	}
	return 0
}

func (x *JobDefinition) GetCpusPerTask() uint64 {
	if x != nil {
		return x.CpusPerTask
	}
	return 0
}

func (x *JobDefinition) GetNtasks() uint64 {
	if x != nil {
		return x.Ntasks
	}
	return 0
}

type JobTime struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start *BigInt `protobuf:"bytes,1,opt,name=start,proto3" json:"start,omitempty"`
	End   *BigInt `protobuf:"bytes,2,opt,name=end,proto3" json:"end,omitempty"`
}

func (x *JobTime) Reset() {
	*x = JobTime{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metrics_v1_metrics_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobTime) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobTime) ProtoMessage() {}

func (x *JobTime) ProtoReflect() protoreflect.Message {
	mi := &file_metrics_v1_metrics_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobTime.ProtoReflect.Descriptor instead.
func (*JobTime) Descriptor() ([]byte, []int) {
	return file_metrics_v1_metrics_proto_rawDescGZIP(), []int{7}
}

func (x *JobTime) GetStart() *BigInt {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *JobTime) GetEnd() *BigInt {
	if x != nil {
		return x.End
	}
	return nil
}

var File_metrics_v1_metrics_proto protoreflect.FileDescriptor

var file_metrics_v1_metrics_proto_rawDesc = []byte{
	0x0a, 0x18, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x6d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x73, 0x2e, 0x76, 0x31, 0x22, 0x79, 0x0a, 0x02, 0x44, 0x42, 0x12, 0x18, 0x0a, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x07, 0x6d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x2a, 0x0a, 0x08, 0x6f, 0x6c, 0x64, 0x5f, 0x6a, 0x6f, 0x62,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x07, 0x6f, 0x6c, 0x64, 0x4a, 0x6f, 0x62,
	0x73, 0x22, 0x37, 0x0a, 0x0d, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x65, 0x64, 0x4d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xca, 0x09, 0x0a, 0x07, 0x4d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x33, 0x0a, 0x15, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x4a, 0x0a, 0x14, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6f, 0x66, 0x5f, 0x6a,
	0x6f, 0x62, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x65, 0x64, 0x4d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x52, 0x11, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x4f, 0x66, 0x4a, 0x6f, 0x62, 0x73, 0x12, 0x47, 0x0a, 0x12, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x5f, 0x6a, 0x6f, 0x62, 0x73, 0x5f, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x65, 0x64, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x10,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4a, 0x6f, 0x62, 0x73, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x12, 0x54, 0x0a, 0x19, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6a, 0x6f, 0x62, 0x73, 0x5f, 0x6d,
	0x65, 0x74, 0x61, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x65, 0x64, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x16,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4a, 0x6f, 0x62, 0x73, 0x4d, 0x65, 0x74, 0x61, 0x53, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x12, 0x4b, 0x0a, 0x14, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x6a, 0x6f, 0x62, 0x73, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x65, 0x64, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52,
	0x12, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4a, 0x6f, 0x62, 0x73, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x64, 0x12, 0x47, 0x0a, 0x12, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6a, 0x6f, 0x62,
	0x73, 0x5f, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x65, 0x64, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x10, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x4a, 0x6f, 0x62, 0x73, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x4b, 0x0a, 0x14,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6a, 0x6f, 0x62, 0x73, 0x5f, 0x63, 0x61, 0x6e, 0x63, 0x65,
	0x6c, 0x6c, 0x65, 0x64, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x65, 0x64, 0x4d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x12, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4a, 0x6f, 0x62, 0x73,
	0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x65, 0x64, 0x12, 0x49, 0x0a, 0x13, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x6a, 0x6f, 0x62, 0x73, 0x5f, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64,
	0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x65, 0x64, 0x4d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x52, 0x11, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4a, 0x6f, 0x62, 0x73, 0x46, 0x69, 0x6e, 0x69,
	0x73, 0x68, 0x65, 0x64, 0x12, 0x45, 0x0a, 0x11, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6a, 0x6f,
	0x62, 0x73, 0x5f, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x65, 0x64, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x0f, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x4a, 0x6f, 0x62, 0x73, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x12, 0x53, 0x0a, 0x19, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6a, 0x6f, 0x62, 0x73, 0x5f, 0x6f, 0x75, 0x74, 0x5f, 0x6f, 0x66,
	0x5f, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x65, 0x64, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x15, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x4a, 0x6f, 0x62, 0x73, 0x4f, 0x75, 0x74, 0x4f, 0x66, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x73,
	0x12, 0x47, 0x0a, 0x12, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74,
	0x5f, 0x73, 0x70, 0x65, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x65,
	0x64, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x10, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x72,
	0x65, 0x64, 0x69, 0x74, 0x53, 0x70, 0x65, 0x6e, 0x74, 0x12, 0x3f, 0x0a, 0x0e, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x67, 0x70, 0x75, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x65, 0x64, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x0c, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x47, 0x70, 0x75, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3f, 0x0a, 0x0e, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x63, 0x70, 0x75, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x65, 0x64, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x0c, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x43, 0x70, 0x75, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x47, 0x0a, 0x12, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6a, 0x6f, 0x62, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x65, 0x64, 0x4d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x52, 0x10, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4a, 0x6f, 0x62, 0x44, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x12, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x5f, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x57, 0x61, 0x74, 0x63, 0x68,
	0x65, 0x64, 0x12, 0x45, 0x0a, 0x11, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6a, 0x6f, 0x62, 0x5f,
	0x72, 0x65, 0x66, 0x75, 0x73, 0x65, 0x64, 0x18, 0x10, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x65, 0x64, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4a,
	0x6f, 0x62, 0x52, 0x65, 0x66, 0x75, 0x73, 0x65, 0x64, 0x12, 0x4c, 0x0a, 0x15, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x62, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x5f, 0x74, 0x6f, 0x6f, 0x5f, 0x6d, 0x75,
	0x63, 0x68, 0x18, 0x11, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x65, 0x64, 0x4d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x52, 0x12, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x69, 0x6c, 0x6c, 0x65, 0x64,
	0x54, 0x6f, 0x6f, 0x4d, 0x75, 0x63, 0x68, 0x22, 0xa6, 0x02, 0x0a, 0x03, 0x4a, 0x6f, 0x62, 0x12,
	0x15, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x23,
	0x0a, 0x0d, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x41,
	0x64, 0x64, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x12, 0x39, 0x0a, 0x0a, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4a, 0x6f, 0x62, 0x44, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x04, 0x63, 0x6f, 0x73, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4a,
	0x6f, 0x62, 0x43, 0x6f, 0x73, 0x74, 0x52, 0x04, 0x63, 0x6f, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x04,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4a, 0x6f, 0x62, 0x54, 0x69, 0x6d, 0x65, 0x52,
	0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6a, 0x6f, 0x62, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x6a, 0x6f, 0x62, 0x4e, 0x61, 0x6d, 0x65,
	0x22, 0x1e, 0x0a, 0x06, 0x42, 0x69, 0x67, 0x49, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x79,
	0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73,
	0x22, 0x6b, 0x0a, 0x07, 0x4a, 0x6f, 0x62, 0x43, 0x6f, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x08, 0x6d,
	0x61, 0x78, 0x5f, 0x63, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x67, 0x49, 0x6e,
	0x74, 0x52, 0x07, 0x6d, 0x61, 0x78, 0x43, 0x6f, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x0a, 0x66, 0x69,
	0x6e, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x67, 0x49,
	0x6e, 0x74, 0x52, 0x09, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x43, 0x6f, 0x73, 0x74, 0x22, 0x8f, 0x01,
	0x0a, 0x0d, 0x4a, 0x6f, 0x62, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x22, 0x0a, 0x0d, 0x67, 0x70, 0x75, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x74, 0x61, 0x73, 0x6b,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x67, 0x70, 0x75, 0x73, 0x50, 0x65, 0x72, 0x54,
	0x61, 0x73, 0x6b, 0x12, 0x1e, 0x0a, 0x0b, 0x6d, 0x65, 0x6d, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x63,
	0x70, 0x75, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x6d, 0x65, 0x6d, 0x50, 0x65, 0x72,
	0x43, 0x70, 0x75, 0x12, 0x22, 0x0a, 0x0d, 0x63, 0x70, 0x75, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x5f,
	0x74, 0x61, 0x73, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x63, 0x70, 0x75, 0x73,
	0x50, 0x65, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x74, 0x61, 0x73, 0x6b,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x6e, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x22,
	0x59, 0x0a, 0x07, 0x4a, 0x6f, 0x62, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x05, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x67, 0x49, 0x6e, 0x74, 0x52, 0x05, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x12, 0x24, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x42,
	0x69, 0x67, 0x49, 0x6e, 0x74, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x42, 0x51, 0x5a, 0x4f, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x65, 0x65, 0x70, 0x73, 0x71, 0x75,
	0x61, 0x72, 0x65, 0x2d, 0x69, 0x6f, 0x2f, 0x74, 0x68, 0x65, 0x2d, 0x67, 0x72, 0x69, 0x64, 0x2f,
	0x73, 0x6d, 0x61, 0x72, 0x74, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2d,
	0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x2f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73,
	0x2f, 0x76, 0x31, 0x3b, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x76, 0x31, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_metrics_v1_metrics_proto_rawDescOnce sync.Once
	file_metrics_v1_metrics_proto_rawDescData = file_metrics_v1_metrics_proto_rawDesc
)

func file_metrics_v1_metrics_proto_rawDescGZIP() []byte {
	file_metrics_v1_metrics_proto_rawDescOnce.Do(func() {
		file_metrics_v1_metrics_proto_rawDescData = protoimpl.X.CompressGZIP(file_metrics_v1_metrics_proto_rawDescData)
	})
	return file_metrics_v1_metrics_proto_rawDescData
}

var file_metrics_v1_metrics_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_metrics_v1_metrics_proto_goTypes = []interface{}{
	(*DB)(nil),            // 0: metrics.v1.DB
	(*LabeledMetric)(nil), // 1: metrics.v1.LabeledMetric
	(*Metrics)(nil),       // 2: metrics.v1.Metrics
	(*Job)(nil),           // 3: metrics.v1.Job
	(*BigInt)(nil),        // 4: metrics.v1.BigInt
	(*JobCost)(nil),       // 5: metrics.v1.JobCost
	(*JobDefinition)(nil), // 6: metrics.v1.JobDefinition
	(*JobTime)(nil),       // 7: metrics.v1.JobTime
}
var file_metrics_v1_metrics_proto_depIdxs = []int32{
	2,  // 0: metrics.v1.DB.metrics:type_name -> metrics.v1.Metrics
	3,  // 1: metrics.v1.DB.old_jobs:type_name -> metrics.v1.Job
	1,  // 2: metrics.v1.Metrics.total_number_of_jobs:type_name -> metrics.v1.LabeledMetric
	1,  // 3: metrics.v1.Metrics.total_jobs_pending:type_name -> metrics.v1.LabeledMetric
	1,  // 4: metrics.v1.Metrics.total_jobs_meta_scheduled:type_name -> metrics.v1.LabeledMetric
	1,  // 5: metrics.v1.Metrics.total_jobs_scheduled:type_name -> metrics.v1.LabeledMetric
	1,  // 6: metrics.v1.Metrics.total_jobs_running:type_name -> metrics.v1.LabeledMetric
	1,  // 7: metrics.v1.Metrics.total_jobs_cancelled:type_name -> metrics.v1.LabeledMetric
	1,  // 8: metrics.v1.Metrics.total_jobs_finished:type_name -> metrics.v1.LabeledMetric
	1,  // 9: metrics.v1.Metrics.total_jobs_failed:type_name -> metrics.v1.LabeledMetric
	1,  // 10: metrics.v1.Metrics.total_jobs_out_of_credits:type_name -> metrics.v1.LabeledMetric
	1,  // 11: metrics.v1.Metrics.total_credit_spent:type_name -> metrics.v1.LabeledMetric
	1,  // 12: metrics.v1.Metrics.total_gpu_time:type_name -> metrics.v1.LabeledMetric
	1,  // 13: metrics.v1.Metrics.total_cpu_time:type_name -> metrics.v1.LabeledMetric
	1,  // 14: metrics.v1.Metrics.total_job_duration:type_name -> metrics.v1.LabeledMetric
	1,  // 15: metrics.v1.Metrics.total_job_refused:type_name -> metrics.v1.LabeledMetric
	1,  // 16: metrics.v1.Metrics.total_billed_too_much:type_name -> metrics.v1.LabeledMetric
	6,  // 17: metrics.v1.Job.definition:type_name -> metrics.v1.JobDefinition
	5,  // 18: metrics.v1.Job.cost:type_name -> metrics.v1.JobCost
	7,  // 19: metrics.v1.Job.time:type_name -> metrics.v1.JobTime
	4,  // 20: metrics.v1.JobCost.max_cost:type_name -> metrics.v1.BigInt
	4,  // 21: metrics.v1.JobCost.final_cost:type_name -> metrics.v1.BigInt
	4,  // 22: metrics.v1.JobTime.start:type_name -> metrics.v1.BigInt
	4,  // 23: metrics.v1.JobTime.end:type_name -> metrics.v1.BigInt
	24, // [24:24] is the sub-list for method output_type
	24, // [24:24] is the sub-list for method input_type
	24, // [24:24] is the sub-list for extension type_name
	24, // [24:24] is the sub-list for extension extendee
	0,  // [0:24] is the sub-list for field type_name
}

func init() { file_metrics_v1_metrics_proto_init() }
func file_metrics_v1_metrics_proto_init() {
	if File_metrics_v1_metrics_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_metrics_v1_metrics_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metrics_v1_metrics_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LabeledMetric); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metrics_v1_metrics_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Metrics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metrics_v1_metrics_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Job); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metrics_v1_metrics_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BigInt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metrics_v1_metrics_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobCost); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metrics_v1_metrics_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobDefinition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metrics_v1_metrics_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobTime); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_metrics_v1_metrics_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_metrics_v1_metrics_proto_goTypes,
		DependencyIndexes: file_metrics_v1_metrics_proto_depIdxs,
		MessageInfos:      file_metrics_v1_metrics_proto_msgTypes,
	}.Build()
	File_metrics_v1_metrics_proto = out.File
	file_metrics_v1_metrics_proto_rawDesc = nil
	file_metrics_v1_metrics_proto_goTypes = nil
	file_metrics_v1_metrics_proto_depIdxs = nil
}
