{
  "swagger": "2.0",
  "info": {
    "title": "supervisor/v1alpha1/supervisor.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "RouteGuideAPI"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/supervisor.v1alpha1.RouteGuideAPI/GetFeature": {
      "post": {
        "summary": "A simple RPC.",
        "description": "Obtains the feature at a given position.\n\nA feature with an empty name is returned if there's no feature at the given\nposition.",
        "operationId": "RouteGuideAPI_GetFeature",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetFeatureResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1alpha1GetFeatureRequest"
            }
          }
        ],
        "tags": [
          "RouteGuideAPI"
        ]
      }
    },
    "/supervisor.v1alpha1.RouteGuideAPI/ListFeatures": {
      "post": {
        "summary": "A server-to-client streaming RPC.",
        "description": "Obtains the Features available within the given Rectangle.  Results are\nstreamed rather than returned at once (e.g. in a response message with a\nrepeated field), as the rectangle may cover a large area and contain a\nhuge number of features.",
        "operationId": "RouteGuideAPI_ListFeatures",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/v1alpha1ListFeaturesResponse"
                },
                "error": {
                  "$ref": "#/definitions/rpcStatus"
                }
              },
              "title": "Stream result of v1alpha1ListFeaturesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1alpha1ListFeaturesRequest"
            }
          }
        ],
        "tags": [
          "RouteGuideAPI"
        ]
      }
    },
    "/supervisor.v1alpha1.RouteGuideAPI/RecordRoute": {
      "post": {
        "summary": "A client-to-server streaming RPC.",
        "description": "Accepts a stream of Points on a route being traversed, returning a\nRouteSummary when traversal is completed.",
        "operationId": "RouteGuideAPI_RecordRoute",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1RecordRouteResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": " (streaming inputs)",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1alpha1RecordRouteRequest"
            }
          }
        ],
        "tags": [
          "RouteGuideAPI"
        ]
      }
    },
    "/supervisor.v1alpha1.RouteGuideAPI/RouteChat": {
      "post": {
        "summary": "A Bidirectional streaming RPC.",
        "description": "Accepts a stream of RouteNotes sent while a route is being traversed,\nwhile receiving other RouteNotes (e.g. from other users).",
        "operationId": "RouteGuideAPI_RouteChat",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/v1alpha1RouteChatResponse"
                },
                "error": {
                  "$ref": "#/definitions/rpcStatus"
                }
              },
              "title": "Stream result of v1alpha1RouteChatResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": " (streaming inputs)",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1alpha1RouteChatRequest"
            }
          }
        ],
        "tags": [
          "RouteGuideAPI"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1alpha1Feature": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the feature."
        },
        "location": {
          "$ref": "#/definitions/v1alpha1Point",
          "description": "The point where the feature is detected."
        }
      },
      "description": "A feature names something at a given point.\n\nIf a feature could not be named, the name is empty."
    },
    "v1alpha1GetFeatureRequest": {
      "type": "object",
      "properties": {
        "point": {
          "$ref": "#/definitions/v1alpha1Point"
        }
      }
    },
    "v1alpha1GetFeatureResponse": {
      "type": "object",
      "properties": {
        "feature": {
          "$ref": "#/definitions/v1alpha1Feature"
        }
      }
    },
    "v1alpha1ListFeaturesRequest": {
      "type": "object",
      "properties": {
        "rectangle": {
          "$ref": "#/definitions/v1alpha1Rectangle"
        }
      }
    },
    "v1alpha1ListFeaturesResponse": {
      "type": "object",
      "properties": {
        "feature": {
          "$ref": "#/definitions/v1alpha1Feature"
        }
      }
    },
    "v1alpha1Point": {
      "type": "object",
      "properties": {
        "latitude": {
          "type": "integer",
          "format": "int32"
        },
        "longitude": {
          "type": "integer",
          "format": "int32"
        }
      },
      "description": "Points are represented as latitude-longitude pairs in the E7 representation\n(degrees multiplied by 10**7 and rounded to the nearest integer).\nLatitudes should be in the range +/- 90 degrees and longitude should be in\nthe range +/- 180 degrees (inclusive)."
    },
    "v1alpha1RecordRouteRequest": {
      "type": "object",
      "properties": {
        "point": {
          "$ref": "#/definitions/v1alpha1Point"
        }
      }
    },
    "v1alpha1RecordRouteResponse": {
      "type": "object",
      "properties": {
        "routeSummary": {
          "$ref": "#/definitions/v1alpha1RouteSummary"
        }
      }
    },
    "v1alpha1Rectangle": {
      "type": "object",
      "properties": {
        "lo": {
          "$ref": "#/definitions/v1alpha1Point",
          "description": "One corner of the rectangle."
        },
        "hi": {
          "$ref": "#/definitions/v1alpha1Point",
          "description": "The other corner of the rectangle."
        }
      },
      "description": "A latitude-longitude rectangle, represented as two diagonally opposite\npoints \"lo\" and \"hi\"."
    },
    "v1alpha1RouteChatRequest": {
      "type": "object",
      "properties": {
        "routeNote": {
          "$ref": "#/definitions/v1alpha1RouteNote"
        }
      }
    },
    "v1alpha1RouteChatResponse": {
      "type": "object",
      "properties": {
        "routeNote": {
          "$ref": "#/definitions/v1alpha1RouteNote"
        }
      }
    },
    "v1alpha1RouteNote": {
      "type": "object",
      "properties": {
        "location": {
          "$ref": "#/definitions/v1alpha1Point",
          "description": "The location from which the message is sent."
        },
        "message": {
          "type": "string",
          "description": "The message to be sent."
        }
      },
      "description": "A RouteNote is a message sent while at a given point."
    },
    "v1alpha1RouteSummary": {
      "type": "object",
      "properties": {
        "pointCount": {
          "type": "integer",
          "format": "int32",
          "description": "The number of points received."
        },
        "featureCount": {
          "type": "integer",
          "format": "int32",
          "description": "The number of known features passed while traversing the route."
        },
        "distance": {
          "type": "integer",
          "format": "int32",
          "description": "The distance covered in metres."
        },
        "elapsedTime": {
          "type": "integer",
          "format": "int32",
          "description": "The duration of the traversal in seconds."
        }
      },
      "description": "A RouteSummary is received in response to a RecordRoute rpc.\n\nIt contains the number of individual points received, the number of\ndetected features, and the total distance covered as the cumulative sum of\nthe distance between each point."
    }
  }
}
