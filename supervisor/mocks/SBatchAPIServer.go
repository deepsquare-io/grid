// Code generated by mockery v2.22.1. DO NOT EDIT.

package mocks

import (
	context "context"

	sbatchapiv1alpha1 "github.com/deepsquare-io/the-grid/supervisor/generated/sbatchapi/v1alpha1"
	mock "github.com/stretchr/testify/mock"
)

// SBatchAPIServer is an autogenerated mock type for the SBatchAPIServer type
type SBatchAPIServer struct {
	mock.Mock
}

// GetSBatch provides a mock function with given fields: _a0, _a1
func (_m *SBatchAPIServer) GetSBatch(_a0 context.Context, _a1 *sbatchapiv1alpha1.GetSBatchRequest) (*sbatchapiv1alpha1.GetSBatchResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *sbatchapiv1alpha1.GetSBatchResponse
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *sbatchapiv1alpha1.GetSBatchRequest) (*sbatchapiv1alpha1.GetSBatchResponse, error)); ok {
		return rf(_a0, _a1)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *sbatchapiv1alpha1.GetSBatchRequest) *sbatchapiv1alpha1.GetSBatchResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*sbatchapiv1alpha1.GetSBatchResponse)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *sbatchapiv1alpha1.GetSBatchRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// mustEmbedUnimplementedSBatchAPIServer provides a mock function with given fields:
func (_m *SBatchAPIServer) mustEmbedUnimplementedSBatchAPIServer() {
	_m.Called()
}

type mockConstructorTestingTNewSBatchAPIServer interface {
	mock.TestingT
	Cleanup(func())
}

// NewSBatchAPIServer creates a new instance of SBatchAPIServer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewSBatchAPIServer(t mockConstructorTestingTNewSBatchAPIServer) *SBatchAPIServer {
	mock := &SBatchAPIServer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
