// @generated by protobuf-ts 2.8.2
// @generated from protobuf file "auth/v1alpha1/auth.proto" (package "auth.v1alpha1", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { AuthAPI } from "./auth";
import type { SignInResponse } from "./auth";
import type { SignInRequest } from "./auth";
import type { NonceResponse } from "./auth";
import type { NonceRequest } from "./auth";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { RegisterResponse } from "./auth";
import type { RegisterRequest } from "./auth";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service auth.v1alpha1.AuthAPI
 */
export interface IAuthAPIClient {
    /**
     * @generated from protobuf rpc: Register(auth.v1alpha1.RegisterRequest) returns (auth.v1alpha1.RegisterResponse);
     */
    register(input: RegisterRequest, options?: RpcOptions): UnaryCall<RegisterRequest, RegisterResponse>;
    /**
     * @generated from protobuf rpc: Nonce(auth.v1alpha1.NonceRequest) returns (auth.v1alpha1.NonceResponse);
     */
    nonce(input: NonceRequest, options?: RpcOptions): UnaryCall<NonceRequest, NonceResponse>;
    /**
     * @generated from protobuf rpc: SignIn(auth.v1alpha1.SignInRequest) returns (auth.v1alpha1.SignInResponse);
     */
    signIn(input: SignInRequest, options?: RpcOptions): UnaryCall<SignInRequest, SignInResponse>;
}
/**
 * @generated from protobuf service auth.v1alpha1.AuthAPI
 */
export class AuthAPIClient implements IAuthAPIClient, ServiceInfo {
    typeName = AuthAPI.typeName;
    methods = AuthAPI.methods;
    options = AuthAPI.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: Register(auth.v1alpha1.RegisterRequest) returns (auth.v1alpha1.RegisterResponse);
     */
    register(input: RegisterRequest, options?: RpcOptions): UnaryCall<RegisterRequest, RegisterResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<RegisterRequest, RegisterResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: Nonce(auth.v1alpha1.NonceRequest) returns (auth.v1alpha1.NonceResponse);
     */
    nonce(input: NonceRequest, options?: RpcOptions): UnaryCall<NonceRequest, NonceResponse> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<NonceRequest, NonceResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: SignIn(auth.v1alpha1.SignInRequest) returns (auth.v1alpha1.SignInResponse);
     */
    signIn(input: SignInRequest, options?: RpcOptions): UnaryCall<SignInRequest, SignInResponse> {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept<SignInRequest, SignInResponse>("unary", this._transport, method, opt, input);
    }
}
