// Code generated by mockery v2.22.1. DO NOT EDIT.

package mocks

import (
	context "context"

	supervisorv1alpha1 "github.com/deepsquare-io/the-grid/supervisor/gen/go/supervisor/v1alpha1"
	mock "github.com/stretchr/testify/mock"
)

// JobAPIServer is an autogenerated mock type for the JobAPIServer type
type JobAPIServer struct {
	mock.Mock
}

// SetJobStatus provides a mock function with given fields: _a0, _a1
func (_m *JobAPIServer) SetJobStatus(_a0 context.Context, _a1 *supervisorv1alpha1.SetJobStatusRequest) (*supervisorv1alpha1.SetJobStatusResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *supervisorv1alpha1.SetJobStatusResponse
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *supervisorv1alpha1.SetJobStatusRequest) (*supervisorv1alpha1.SetJobStatusResponse, error)); ok {
		return rf(_a0, _a1)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *supervisorv1alpha1.SetJobStatusRequest) *supervisorv1alpha1.SetJobStatusResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*supervisorv1alpha1.SetJobStatusResponse)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *supervisorv1alpha1.SetJobStatusRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// mustEmbedUnimplementedJobAPIServer provides a mock function with given fields:
func (_m *JobAPIServer) mustEmbedUnimplementedJobAPIServer() {
	_m.Called()
}

type mockConstructorTestingTNewJobAPIServer interface {
	mock.TestingT
	Cleanup(func())
}

// NewJobAPIServer creates a new instance of JobAPIServer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewJobAPIServer(t mockConstructorTestingTNewJobAPIServer) *JobAPIServer {
	mock := &JobAPIServer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
