// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

type Module struct {
	// Name of the module.
	Name string `json:"name"`
	// Description of the module.
	Description string `json:"description"`
	// Minimum job resources.
	MinimumResources *JobResources `json:"minimumResources"`
	// List of allowed arguments.
	Inputs []*ModuleInput `json:"inputs,omitempty"`
	// List of exported environment variables.
	Outputs []*ModuleOutput `json:"outputs,omitempty"`
	// Steps of the module.
	Steps []*Step `json:"steps"`
}

type ModuleInput struct {
	// Name of the input.
	Key string `json:"key"`
	// Description of the input.
	Description string `json:"description"`
}

type ModuleOutput struct {
	// Name of the output.
	Key string `json:"key"`
	// Description of the output.
	Description string `json:"description"`
}

type StepUse struct {
	// Use git to import the group of steps.
	//
	// Syntax: <url>@<tag/hash>
	//
	// Example: github.com/example/my-module@v1
	Git string `json:"git"`
	// Arguments to be passed as inputs to the group of steps.
	Args []*EnvVar `json:"args,omitempty"`
	// Environment variables exported with be prefixed with the value of this field.
	//
	// Exemple: If exportEnvAs=MY_MODULE, and KEY is exported. Then you can invoke ${MY_MODULE_KEY} environment variable.
	ExportEnvAs *string `json:"exportEnvAs,omitempty"`
}
