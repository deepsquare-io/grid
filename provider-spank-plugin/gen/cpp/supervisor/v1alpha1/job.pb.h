// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: supervisor/v1alpha1/job.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_supervisor_2fv1alpha1_2fjob_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_supervisor_2fv1alpha1_2fjob_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3021000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3021009 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_bases.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_supervisor_2fv1alpha1_2fjob_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_supervisor_2fv1alpha1_2fjob_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_supervisor_2fv1alpha1_2fjob_2eproto;
namespace supervisor {
namespace v1alpha1 {
class SetJobStatusRequest;
struct SetJobStatusRequestDefaultTypeInternal;
extern SetJobStatusRequestDefaultTypeInternal _SetJobStatusRequest_default_instance_;
class SetJobStatusResponse;
struct SetJobStatusResponseDefaultTypeInternal;
extern SetJobStatusResponseDefaultTypeInternal _SetJobStatusResponse_default_instance_;
}  // namespace v1alpha1
}  // namespace supervisor
PROTOBUF_NAMESPACE_OPEN
template<> ::supervisor::v1alpha1::SetJobStatusRequest* Arena::CreateMaybeMessage<::supervisor::v1alpha1::SetJobStatusRequest>(Arena*);
template<> ::supervisor::v1alpha1::SetJobStatusResponse* Arena::CreateMaybeMessage<::supervisor::v1alpha1::SetJobStatusResponse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace supervisor {
namespace v1alpha1 {

enum JobStatus : int {
  JOB_STATUS_UNSPECIFIED = 0,
  JOB_STATUS_PENDING = 1,
  JOB_STATUS_META_SCHEDULED = 2,
  JOB_STATUS_SCHEDULED = 3,
  JOB_STATUS_RUNNING = 4,
  JOB_STATUS_CANCELLING = 5,
  JOB_STATUS_CANCELLED = 6,
  JOB_STATUS_FINISHED = 7,
  JOB_STATUS_FAILED = 8,
  JOB_STATUS_OUT_OF_CREDITS = 9,
  JobStatus_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::min(),
  JobStatus_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::max()
};
bool JobStatus_IsValid(int value);
constexpr JobStatus JobStatus_MIN = JOB_STATUS_UNSPECIFIED;
constexpr JobStatus JobStatus_MAX = JOB_STATUS_OUT_OF_CREDITS;
constexpr int JobStatus_ARRAYSIZE = JobStatus_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* JobStatus_descriptor();
template<typename T>
inline const std::string& JobStatus_Name(T enum_t_value) {
  static_assert(::std::is_same<T, JobStatus>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function JobStatus_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    JobStatus_descriptor(), enum_t_value);
}
inline bool JobStatus_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, JobStatus* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<JobStatus>(
    JobStatus_descriptor(), name, value);
}
// ===================================================================

class SetJobStatusRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:supervisor.v1alpha1.SetJobStatusRequest) */ {
 public:
  inline SetJobStatusRequest() : SetJobStatusRequest(nullptr) {}
  ~SetJobStatusRequest() override;
  explicit PROTOBUF_CONSTEXPR SetJobStatusRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  SetJobStatusRequest(const SetJobStatusRequest& from);
  SetJobStatusRequest(SetJobStatusRequest&& from) noexcept
    : SetJobStatusRequest() {
    *this = ::std::move(from);
  }

  inline SetJobStatusRequest& operator=(const SetJobStatusRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetJobStatusRequest& operator=(SetJobStatusRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetJobStatusRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetJobStatusRequest* internal_default_instance() {
    return reinterpret_cast<const SetJobStatusRequest*>(
               &_SetJobStatusRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(SetJobStatusRequest& a, SetJobStatusRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(SetJobStatusRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetJobStatusRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetJobStatusRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetJobStatusRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const SetJobStatusRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const SetJobStatusRequest& from) {
    SetJobStatusRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetJobStatusRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "supervisor.v1alpha1.SetJobStatusRequest";
  }
  protected:
  explicit SetJobStatusRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kIdFieldNumber = 2,
    kDurationFieldNumber = 3,
    kStatusFieldNumber = 4,
  };
  // string name = 1 [json_name = "name"];
  void clear_name();
  const std::string& name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // uint64 id = 2 [json_name = "id"];
  void clear_id();
  uint64_t id() const;
  void set_id(uint64_t value);
  private:
  uint64_t _internal_id() const;
  void _internal_set_id(uint64_t value);
  public:

  // uint64 duration = 3 [json_name = "duration"];
  void clear_duration();
  uint64_t duration() const;
  void set_duration(uint64_t value);
  private:
  uint64_t _internal_duration() const;
  void _internal_set_duration(uint64_t value);
  public:

  // .supervisor.v1alpha1.JobStatus status = 4 [json_name = "status"];
  void clear_status();
  ::supervisor::v1alpha1::JobStatus status() const;
  void set_status(::supervisor::v1alpha1::JobStatus value);
  private:
  ::supervisor::v1alpha1::JobStatus _internal_status() const;
  void _internal_set_status(::supervisor::v1alpha1::JobStatus value);
  public:

  // @@protoc_insertion_point(class_scope:supervisor.v1alpha1.SetJobStatusRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
    uint64_t id_;
    uint64_t duration_;
    int status_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_supervisor_2fv1alpha1_2fjob_2eproto;
};
// -------------------------------------------------------------------

class SetJobStatusResponse final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:supervisor.v1alpha1.SetJobStatusResponse) */ {
 public:
  inline SetJobStatusResponse() : SetJobStatusResponse(nullptr) {}
  explicit PROTOBUF_CONSTEXPR SetJobStatusResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  SetJobStatusResponse(const SetJobStatusResponse& from);
  SetJobStatusResponse(SetJobStatusResponse&& from) noexcept
    : SetJobStatusResponse() {
    *this = ::std::move(from);
  }

  inline SetJobStatusResponse& operator=(const SetJobStatusResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetJobStatusResponse& operator=(SetJobStatusResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetJobStatusResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetJobStatusResponse* internal_default_instance() {
    return reinterpret_cast<const SetJobStatusResponse*>(
               &_SetJobStatusResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(SetJobStatusResponse& a, SetJobStatusResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(SetJobStatusResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetJobStatusResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetJobStatusResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetJobStatusResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const SetJobStatusResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const SetJobStatusResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "supervisor.v1alpha1.SetJobStatusResponse";
  }
  protected:
  explicit SetJobStatusResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:supervisor.v1alpha1.SetJobStatusResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
  };
  friend struct ::TableStruct_supervisor_2fv1alpha1_2fjob_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// SetJobStatusRequest

// string name = 1 [json_name = "name"];
inline void SetJobStatusRequest::clear_name() {
  _impl_.name_.ClearToEmpty();
}
inline const std::string& SetJobStatusRequest::name() const {
  // @@protoc_insertion_point(field_get:supervisor.v1alpha1.SetJobStatusRequest.name)
  return _internal_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void SetJobStatusRequest::set_name(ArgT0&& arg0, ArgT... args) {
 
 _impl_.name_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:supervisor.v1alpha1.SetJobStatusRequest.name)
}
inline std::string* SetJobStatusRequest::mutable_name() {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:supervisor.v1alpha1.SetJobStatusRequest.name)
  return _s;
}
inline const std::string& SetJobStatusRequest::_internal_name() const {
  return _impl_.name_.Get();
}
inline void SetJobStatusRequest::_internal_set_name(const std::string& value) {
  
  _impl_.name_.Set(value, GetArenaForAllocation());
}
inline std::string* SetJobStatusRequest::_internal_mutable_name() {
  
  return _impl_.name_.Mutable(GetArenaForAllocation());
}
inline std::string* SetJobStatusRequest::release_name() {
  // @@protoc_insertion_point(field_release:supervisor.v1alpha1.SetJobStatusRequest.name)
  return _impl_.name_.Release();
}
inline void SetJobStatusRequest::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  _impl_.name_.SetAllocated(name, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:supervisor.v1alpha1.SetJobStatusRequest.name)
}

// uint64 id = 2 [json_name = "id"];
inline void SetJobStatusRequest::clear_id() {
  _impl_.id_ = uint64_t{0u};
}
inline uint64_t SetJobStatusRequest::_internal_id() const {
  return _impl_.id_;
}
inline uint64_t SetJobStatusRequest::id() const {
  // @@protoc_insertion_point(field_get:supervisor.v1alpha1.SetJobStatusRequest.id)
  return _internal_id();
}
inline void SetJobStatusRequest::_internal_set_id(uint64_t value) {
  
  _impl_.id_ = value;
}
inline void SetJobStatusRequest::set_id(uint64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:supervisor.v1alpha1.SetJobStatusRequest.id)
}

// uint64 duration = 3 [json_name = "duration"];
inline void SetJobStatusRequest::clear_duration() {
  _impl_.duration_ = uint64_t{0u};
}
inline uint64_t SetJobStatusRequest::_internal_duration() const {
  return _impl_.duration_;
}
inline uint64_t SetJobStatusRequest::duration() const {
  // @@protoc_insertion_point(field_get:supervisor.v1alpha1.SetJobStatusRequest.duration)
  return _internal_duration();
}
inline void SetJobStatusRequest::_internal_set_duration(uint64_t value) {
  
  _impl_.duration_ = value;
}
inline void SetJobStatusRequest::set_duration(uint64_t value) {
  _internal_set_duration(value);
  // @@protoc_insertion_point(field_set:supervisor.v1alpha1.SetJobStatusRequest.duration)
}

// .supervisor.v1alpha1.JobStatus status = 4 [json_name = "status"];
inline void SetJobStatusRequest::clear_status() {
  _impl_.status_ = 0;
}
inline ::supervisor::v1alpha1::JobStatus SetJobStatusRequest::_internal_status() const {
  return static_cast< ::supervisor::v1alpha1::JobStatus >(_impl_.status_);
}
inline ::supervisor::v1alpha1::JobStatus SetJobStatusRequest::status() const {
  // @@protoc_insertion_point(field_get:supervisor.v1alpha1.SetJobStatusRequest.status)
  return _internal_status();
}
inline void SetJobStatusRequest::_internal_set_status(::supervisor::v1alpha1::JobStatus value) {
  
  _impl_.status_ = value;
}
inline void SetJobStatusRequest::set_status(::supervisor::v1alpha1::JobStatus value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:supervisor.v1alpha1.SetJobStatusRequest.status)
}

// -------------------------------------------------------------------

// SetJobStatusResponse

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v1alpha1
}  // namespace supervisor

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::supervisor::v1alpha1::JobStatus> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::supervisor::v1alpha1::JobStatus>() {
  return ::supervisor::v1alpha1::JobStatus_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_supervisor_2fv1alpha1_2fjob_2eproto
