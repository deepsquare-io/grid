---
job:
  enableLogging: true
  input:
    s3:
      region: region
      bucketUrl: s3://test
      path: '/test'
      accessKeyId: accessKeyId
      secretAccessKey: secretAccessKey
      endpointUrl: https://example
  output:
    s3:
      region: region
      bucketUrl: s3://test
      path: '/test'
      accessKeyId: accessKeyId
      secretAccessKey: secretAccessKey
      endpointUrl: https://example
  continuousOutputSync: true
  steps:
    - name: prepare-scripts
      run:
        resources:
          tasks: 1
          cpusPerTask: 4
          memPerCpu: 4096
          gpusPerTask: 0
        command: |-
          cat << END > ./frames_per_node.py
          import bpy
          import math
          scene = bpy.context.scene
          frames_per_task = int(math.ceil((scene.frame_end - scene.frame_start + 1)/float($NTASKS)))
          print(f"frames_per_task={frames_per_task}")
          END

          cat << 'END' > ./start_frame.py
          import bpy
          print(f"start_frame={bpy.context.scene.frame_start}")
          END

          cat << 'END' > ./end_frame.py
          import bpy
          print(f"end_frame={bpy.context.scene.frame_end}")
          END
    - name: compute-frames
      run:
        resources:
          tasks: 1
          cpusPerTask: 4
          memPerCpu: 4096
          gpusPerTask: 0
        command: |-
          frames_per_task=$(blender -b "$STORAGE_PATH/inputs/"*.blend -P ./frames_per_task.py | sed -nr 's/frames_per_task=(.*)/\1/p')
          start_frame=$(blender -b "$STORAGE_PATH/inputs/"*.blend -P ./start_frame.py | sed -nr 's/start_frame=(.*)/\1/p')
          end_frame=$(blender -b "$STORAGE_PATH/inputs/"*.blend -P ./end_frame.py | sed -nr 's/end_frame=(.*)/\1/p')
          echo "START_FRAME=$start_frame" >> "$STORAGE_PATH/env"
          echo "END_FRAME=$end_frame" >> "$STORAGE_PATH"/env"
          echo "FRAMES_PER_TASK=$frames_per_task" >> "$STORAGE_PATH/env"
    - name: assert-calculus
      run:
        resources:
          tasks: 1
          cpusPerTask: 4
          memPerCpu: 4096
          gpusPerTask: 0
        command: |-
          if [ "$FRAMES_PER_TASK" -lt "$NTASKS" ]; then
            echo "The job has stopped to avoid overconsumption."
            echo "Please use $FRAMES_PER_TASK instead of $NTASKS tasks."
            exit 1
          fi
    - name: render
      run:
        resources:
          tasks: 4
          cpusPerTask: 4
          memPerCpu: 4096
          gpusPerTask: 1
        command: ''
