// Code generated by mockery v2.14.1. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"

	slurm "github.com/deepsquare-io/the-grid/supervisor/pkg/slurm"
)

// JobScheduler is an autogenerated mock type for the JobScheduler type
type JobScheduler struct {
	mock.Mock
}

// HealthCheck provides a mock function with given fields: ctx
func (_m *JobScheduler) HealthCheck(ctx context.Context) error {
	ret := _m.Called(ctx)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context) error); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Submit provides a mock function with given fields: ctx, req
func (_m *JobScheduler) Submit(ctx context.Context, req *slurm.SubmitJobRequest) (int, error) {
	ret := _m.Called(ctx, req)

	var r0 int
	if rf, ok := ret.Get(0).(func(context.Context, *slurm.SubmitJobRequest) int); ok {
		r0 = rf(ctx, req)
	} else {
		r0 = ret.Get(0).(int)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *slurm.SubmitJobRequest) error); ok {
		r1 = rf(ctx, req)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewJobScheduler interface {
	mock.TestingT
	Cleanup(func())
}

// NewJobScheduler creates a new instance of JobScheduler. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewJobScheduler(t mockConstructorTestingTNewJobScheduler) *JobScheduler {
	mock := &JobScheduler{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
